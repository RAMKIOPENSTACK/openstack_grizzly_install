{"name":"Openstack Grizzly Installation Script","tagline":"Installation Bash Script for OpenStack Grizzly on Ubuntu Server 12.04 LTS","body":"Author\r\n----\r\n\r\nTomokazu Hirai @jedipunkz\r\n\r\nTwitter : <https://twitter.com/jedipunkz>\r\nBlog    : <http://jedipunkz.github.io>\r\n\r\nNotice\r\n----\r\n\r\nThis script was tested ..\r\n\r\n* all in one node with quantum\r\n* separated nodes (controller node, network node, compute x n) with quantum\r\n* GRE Tunnel\r\n\r\nso, now I do not support separated nodes for each service (keystone, glance,\r\nnova, etc...). If you want to do this with separated nodes mode, please tell\r\nme for fork it.\r\n\r\nMotivation\r\n----\r\n\r\ndevstack is very usefull for me. I am using devstack for understanding\r\nopenstack, especially Quantum ! ;) but when I reboot devstack node, all of\r\nopenstack compornents was not booted. That is not good for me. and I wanted to\r\nuse Ubuntu Cloud Archive packages.\r\n\r\nRequire Environment\r\n----\r\n\r\n#### cinder device\r\n\r\nyou need disk device for cinder like /dev/sdb1. if you do not have additional\r\ndisk device, you can partition the disk device by partitioner.(/dev/sda6) and\r\nplease set device name ${CINDER_VOLUME} on setup.conf\r\n\r\n#### in all in one node mode\r\n\r\nYou need 2 NICs (management network, public network). You can run this script\r\nvia management network NIC. VM can access to the internet via public network\r\nNIC (default : eth0, You can change device on setup.conf).\r\n\r\n#### in separated nodes mode\r\n\r\nYou need 3 NICs for ..\r\n\r\n* management network\r\n* public network / API network (default: eth0)\r\n* data network (default: eth1)\r\n\r\nfor more details, please see this doc. \r\n\r\n<http://docs.openstack.org/trunk/openstack-network/admin/content/app_demo_single_router.html>\r\n\r\nQuantum was designed on 4 networks (public, data, managememt, api) so You can\r\n3 NICs on separated nodes mode. API network and Public network can share same\r\nnetwork segment or you can separate these networks. This README's\r\nconfiguration of the premise is sharing a segment with API and Public network\r\n(default NIC : eth0).\r\n\r\nHow to use on All in One Node\r\n----\r\n\r\n#### Architecture\r\n\r\n    +------------------- Public/API Network\r\n    |\r\n    +------------+\r\n    |vm|vm|...   |\r\n    +------------+\r\n    | all in one |\r\n    +------------+\r\n    |     |      \r\n    +-----)------------- Management/API Network\r\n          |             \r\n          +------------- Data Network\r\n\r\n* all of compornetns are on same node.\r\n\r\n#### OS installation\r\n\r\nPlease make a partition such as /dev/sda6 for cinder volumes, if you do not\r\nhave a additional disk device. and install openssh-server only.\r\n\r\n#### Setup network interfaces\r\n\r\nPlease setup network interfaces just like this.\r\n\r\n    % sudo ${EDITOR} /etc/network/interfaces\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    # this NIC will be used for VM traffic to the internet\r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        up ip link set $IFACE promisc on\r\n        down ip link set $IFACE promisc off\r\n        down ifconfig $IFACE down\r\n        address 10.200.9.10\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search example.com\r\n\r\n    # this NIC must be on management network\r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 10.200.10.10\r\n        netmask 255.255.255.0\r\n        gateway 10.200.10.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\nlogin and use this script via eth1 on management network. eth0 will be lost\r\nconnectivity when you run this script. and make sure hostname resolv at\r\n/etc/hosts. in this sample, your host need resolv self fqdn in 10.200.10.10\r\n\r\n#### Get this script\r\n\r\ngit clone this script from github.\r\n\r\n    % git clone git://github.com/jedipunkz/openstack_grizlly_install.git\r\n    % cd openstack_grizzly_install\r\n\r\n#### Edit parameters on setup.conf\r\n\r\nThere are many paramaters on setup.conf, but in 'allinone' mode, parameters\r\nwhich you need to edit is such things.\r\n\r\n    HOST_IP='10.200.10.10'\r\n    HOST_PUB_IP='10.200.9.10'\r\n    PUBLICNETWORK_NIC='eth0'\r\n\r\nIf you want to change other parameters such as DB password, admin password,\r\nplease change these.\r\n\r\n#### Run script\r\n\r\nRun this script, all of conpornents will be built.\r\n\r\n    % sudo ./setup.sh allinone\r\n\r\nThat's all and You've done. :D Now you can access to Horizon\r\n(http://${HOST_IP}/horizon/) with user 'demo', password 'demo'.\r\n\r\nHow to use on separated nodes mode\r\n----\r\n\r\n#### Architecture\r\n\r\n    +-------------+-------------+------------------------------ Public/API Network\r\n    |             |             |             \r\n    +-----------+ +-----------+ +-----------+ +-----------+ +-----------+\r\n    |           | |           | |           | |vm|vm|..   | |vm|vm|..   |\r\n    | controller| |  network  | |  network  | +-----------+ +-----------+\r\n    |           | |           | | additional| |  compute  | |  compute  |\r\n    |           | |           | |           | |           | | additional|\r\n    +-----------+ +-----------+ +-----------+ +-----------+ +-----------+\r\n    |             |     |       |     |       |     |       |\r\n    +-------------+-----)-------+-----)-------+-----)-------)-- Management/API Network\r\n                        |             |             |       |\r\n                        +-------------+-------------+---------- Data Network\r\n\r\n* minimum architecture : 3 nodes (controller node x 1, network node x 1, compute node x1)\r\n* You can add some network nodes and compute nodes.\r\n* additional network node(s) make you be able to have duplication of each agent\r\n* additional compute node(s) make you be able to have more VMs.\r\n\r\n#### OS installation\r\n\r\nPlease make a partition such as /dev/sda6 for cinder volumes, if you do not\r\nhave a additional disk device. and install openssh-server only. and you should\r\n3 nodes or more. (controller, network, compute) nodes.\r\n\r\n#### Get this script\r\n\r\ngit clone this script from github on controller node.\r\n\r\n    controller% git clone git://github.com/jedipunkz/openstack_grizlly_install.git\r\n    controller% cd openstack_grizzly_install\r\n\r\n#### Edit parameters on setup.conf\r\n\r\nThere are many paramaters on setup.conf, but in 'allinone' mode, parameters\r\nwhich you need to edit is such things.\r\n\r\n    CONTROLLER_NODE_IP='10.200.10.10'\r\n    CONTROLLER_NODE_PUB_IP='10.200.9.10'\r\n    NETWORK_NODE_IP='10.200.10.11'\r\n    COMPUTE_NODE_IP='10.200.10.12'\r\n    DATANETWORK_NIC_NETWORK_NODE='eth1'\r\n    DATANETWORK_NIC_COMPUTE_NODE='eth1'\r\n    PUBLICNETWORK_NIC='eth0'\r\n\r\nIf you want to change other parameters such as DB password, admin password,\r\nplease change these.\r\n\r\n#### copy to other nodes\r\n\r\ncopy directory to network node and compute node.\r\n\r\n    controller% scp -r openstack_grizzly_install <network_node_ip>:~/\r\n    controller% scp -r openstack_grizzly_install <compute_node_ip>:~/\r\n\r\n#### Controller Node's network interfaces\r\n\r\nSet up NICs for controller node.\r\n\r\n    controller% sudo ${EDITOR} /etc/network/interfaces\r\n    # The loopback network interface\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    # for API network\r\n    auto eth0\r\n    iface eth0 inet static\r\n        address 10.200.9.10\r\n        netmask 255.255.255.0\r\n        gateway 10.200.9.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search example.com\r\n\r\n    # for management network\r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 10.200.10.10\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search example.com\r\n\r\nand login to controller node via eth0 (public network) for executing this script.\r\nOther NIC will lost connectivity. and make sure hostname resolv at\r\n/etc/hosts. in this sample, your host need resolv self fqdn in 10.200.9.10\r\n\r\n#### Network Node's network interfaces\r\n\r\nSet up NICs for network node.\r\n\r\n    network% sudo ${EDITOR} /etc/network/interfaces\r\n    # The loopback network interface\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    # for API network\r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        up ip link set $IFACE promisc on\r\n        down ip link set $IFACE promisc off\r\n        down ifconfig $IFACE down\r\n        address 10.200.9.11\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search example.com\r\n\r\n    # for VM traffic to the internet\r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 172.16.1.11\r\n        netmask 255.255.255.0\r\n\r\n    # for management network\r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 10.200.10.11\r\n        netmask 255.255.255.0\r\n        gateway 10.200.10.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search example.com\r\n\r\nand login to network node via eth2 (management network) for executing this\r\nscript. Other NIC will lost connectivity.\r\n\r\n#### Compute Node's network interfaces\r\n\r\nSet up NICs for network node.\r\n\r\n    compute% sudo ${EDITOR} /etc/network/interfaces\r\n    # The loopback network interface\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    # for VM traffic to the internet\r\n    auto eth0\r\n    iface eth0 inet static\r\n        address 172.16.1.12\r\n        netmask 255.255.255.0\r\n\r\n    # for management network\r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 10.200.10.12\r\n        netmask 255.255.255.0\r\n        gateway 10.200.10.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search example.com\r\n\r\nand login to compute node via eth2 (mangement network) for executing this\r\nscript. Other NIC will lost connectivity.\r\n\r\n#### Run script\r\n\r\nRun this script, all of conpornents will be built.\r\n\r\n    controller% sudo ./setup.sh controller\r\n    network   % sudo ./setup.sh network\r\n    compute   % sudo ./setup.sh comupte\r\n\r\nThat's all and You've done. :D Now you can access to Horizon\r\n(http://${CONTROLLER_NODE_PUB_IP}/horizon/) with user 'demo', password 'demo'.\r\n\r\n#### Additional Compute Node\r\n\r\nIf you want to have additional compute node(s), please setup network\r\ninterfaces as noted before for compute node and execute these commands.\r\n\r\nEdit setup.conf (COPUTE_NODE_IP parameter) and execute setup.sh.\r\n\r\n    compute    % scp -r ~/openstack_grizzly_install <add_compute_node>:~/\r\n    add_compute% cd openstack_grizzly_install\r\n    add_compute% ${EDITOR} setup.conf\r\n    COMPUTE_NODE_IP='<your additional compute node's ip>'\r\n    add_compute% sudo ./setup.sh compute\r\n    add_compute% sudo nova-manage service list # check nodes list\r\n\r\n#### Additional Network Node\r\n\r\nIf you want to have additional network node(s), please setup network\r\ninterfaces as noted before for network node and execute these commands.\r\n\r\nEdit setup.conf (NETWORK_NODE_IP parameter) and execute setup.sh.\r\n\r\n    network    % scp -r ~/openstack_grizzly_install <add_network_node>:~/\r\n    add_network% cd openstack_grizzly_install\r\n    add_network% ${EDITOR} setup.conf\r\n    NETWORK_NODE_IP='<your additional network node's ip>'\r\n    add_network% sudo ./setup.sh network\r\n    add_network% source ~/openstackrc\r\n    add_network% quantum agent-list # check agent list\r\n\r\nParameters\r\n----\r\n\r\nThese are Meaning of parameters.\r\n\r\n* HOST_IP : IP addr on management network with 'allinone' node\r\n* HOST_PUB_IP : IP addr on public network with 'allinone' node\r\n* PUBLIC_NIC : NIC name on public network with 'allinone' node\r\n* CONTROLLER_NODE_IP : IP addr on management network with controller node\r\n* CONTROLLER_NODE_PUB_IP : IP addr on public network with controller node\r\n* NETWORK_NODE_IP : IP addr on management network with network node\r\n* COMPUTE_NODE_IP : IP addr on management network with compute node\r\n* DATA_NIC_CONTROLLER : NIC name on data network with controller node\r\n* DATA_NIC_COMPUTE : NIC name on data network with compute nod\r\n* PUBLIC_NIC : NIC name on public network on network node\r\n* CINDER_VOLUME : Disk device name for Cinder Volume\r\n* MYSQL_PASS : root password of MySQL\r\n* DB_KEYSTONE_USER : MySQL user for Keystone\r\n* DB_KEYSTONE_PASS : MySQL password for Keystone\r\n* DB_GLANCE_USER : MySQL user for Glance\r\n* DB_GLANCEPASS : MySQL password for Glance\r\n* DB_QUANTUM_USER : MySQL user for Quantum\r\n* DB_QUANTUM_PASS : MySQL password for Quantum\r\n* DB_NOVA_USER : MySQL user for Nova\r\n* DB_NOVA_PASS : MySQL password for Nova\r\n* DB_CINDER_USER : MySQL user for Cinder\r\n* DB_CINDER_PASS : MySQL password for CInder\r\n* ADMIN_PASSWORD : Keystone password for admin user\r\n* SERVICE_PASSWORD : Keystone password for service user\r\n* OS_TENANT_NAME : OS tenant name\r\n* OS_USERNAME : OS username\r\n* OS_PASSWORD : OS password\r\n* DEMO_USER : first user for DEMO\r\n* DEMO_PASSWORD : first user's password for DEMO\r\n* INT_NET_GATEWAY : Gateway address of internal network \r\n* INT_NET_RANGE : Range of external network\r\n* EXT_NET_GATEWAY : Gateway address of external network\r\n* EXT_NET_START : Starging address of external network\r\n* EXT_NET_END : Ending address of external network\r\n* EXT_NET_RANGE : Range of external network\r\n* OS_IMAGE_URL : URL for downloading OS image file\r\n* OS_IMAGE_NAME : Name of OS IMAGE name for Glance service\r\n\r\nLicensing\r\n----\r\n\r\nThis Script  is licensed under a Creative Commons Attribution 3.0 Unported License.\r\n\r\nTo view a copy of this license, visit\r\n[ http://creativecommons.org/licenses/by/3.0/deed.en_US ].\r\n\r\nCredits\r\n----\r\n\r\nThis work has been based on: mseknibilel's guide.\r\n\r\n<https://github.com/mseknibilel/OpenStack-Grizzly-Install-Guide>\r\n\r\nVersion and Change log\r\n----\r\n\r\n* 2013/05/13 : version 0.3 : enabled nova live-migration\r\n* 2013/04/18 : version 0.2 : enabled LBaaS, fixed a problem to access metadata server from vm.\r\n* 2013/04/17 : version 0.1 : First release.\r\n\r\n","google":"UA-30563095-4","note":"Don't delete this file! It's used internally to help with page regeneration."}